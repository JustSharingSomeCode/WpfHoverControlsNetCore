<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WpfHoverControls">

    <local:FloatToStringConverter x:Key="FloatToString"/>
    <local:DoubleToRightMarginConverter x:Key="DoubleToRightMargin"/>
    <local:DoubleToLeftMarginConverter x:Key="DoubleToLeftMargin"/>

    <Style TargetType="{x:Type local:HoverButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HoverButton}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid Name="grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0"
                                   x:Name="IconLbl"
                                   Padding="0"
                                   FontFamily="{TemplateBinding IconFont}"
                                   FontSize="{TemplateBinding IconFontSize}" 
                                   VerticalContentAlignment="Center" 
                                   HorizontalContentAlignment="Center"
                                   Foreground="{TemplateBinding IconForeground}"
                                   Content="{TemplateBinding IconText}"/>
                            <ContentPresenter x:Name="content"
                                              Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextBlock.FontFamily="{TemplateBinding TextFont}"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              TextBlock.FontSize="{TemplateBinding TextFontSize}"
                                              Content="{TemplateBinding Content}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowIcon" Value="True">
                            <Setter TargetName="IconLbl" Property="Width" Value="{Binding ElementName=grid, Path=ActualHeight}"/>
                            <Setter TargetName="IconLbl" Property="Height" Value="{Binding ElementName=grid, Path=ActualHeight}"/>
                        </Trigger>
                        <Trigger Property="ShowIcon" Value="False">
                            <Setter TargetName="IconLbl" Property="Width" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundHover}"/>
                            <Setter TargetName="IconLbl" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IconForegroundHover}"/>
                            <Setter TargetName="content" Property="TextBlock.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ForegroundHover}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:HoverScrollBar}">
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HoverScrollBar}">
                    <Border Background="{TemplateBinding Property=Background}" CornerRadius="{TemplateBinding CornerRadius}" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}">
                        <Track x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Background="{TemplateBinding ThumbBrush}">
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType={x:Type local:HoverScrollBar}}}"/>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="border" Property="Background" Value="{Binding ThumbBrushHover, RelativeSource={RelativeSource AncestorType={x:Type local:HoverScrollBar}}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="PART_Track" Property="IsDirectionReversed" Value="True"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="PART_Track" Property="IsDirectionReversed" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:HoverTextBox}">
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HoverTextBox}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalScrollBarVisibility="Auto"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundHover}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrushHover}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:HoverScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HoverScrollViewer}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid ClipToBounds="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="ContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" ClipToBounds="True" Margin="{TemplateBinding ContentMargin}"/>
                            <local:HoverScrollBar x:Name="PART_VerticalScrollBar"
                                                  Grid.Column="1"
                                                  Value="{TemplateBinding VerticalOffset}"
                                                  Maximum="{TemplateBinding ScrollableHeight}"
                                                  ViewportSize="{TemplateBinding ViewportHeight}"
                                                  Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                  CornerRadius="{TemplateBinding CornerRadius}"
                                                  Background="{TemplateBinding ScrollBarBackground}"
                                                  ThumbBrush="{TemplateBinding ThumbBrush}"/>
                            <local:HoverScrollBar x:Name="PART_HorizontalScrollBar"
                                                  Orientation="Horizontal"
                                                  Grid.Row="1"                     
                                                  Value="{TemplateBinding HorizontalOffset}"
                                                  Maximum="{TemplateBinding ScrollableWidth}"
                                                  ViewportSize="{TemplateBinding ViewportWidth}"
                                                  Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                  CornerRadius="{TemplateBinding CornerRadius}"
                                                  Background="{TemplateBinding ScrollBarBackground}"
                                                  ThumbBrush="{TemplateBinding ThumbBrush}"/>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:HoverFloatAdder}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HoverFloatAdder}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="grid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <local:HoverButton 
                                x:Name="DecreaseBtn"
                                Grid.Column="0" 
                                Width="{Binding ElementName=grid, Path=ActualHeight}" 
                                Height="{Binding ElementName=grid, Path=ActualHeight}"
                                ShowIcon="False"
                                TextFont="Segoe MDL2 Assets"
                                Content="&#xE011;"
                                CornerRadius="{TemplateBinding LeftButtonCornerRadius}"
                                Background="{TemplateBinding ButtonBrush}"
                                BackgroundHover="{TemplateBinding ButtonHoverBrush}"
                                Foreground="{TemplateBinding IconBrush}"
                                ForegroundHover="{TemplateBinding IconHoverBrush}"
                                BorderThickness="0"/>
                            <local:HoverTextBox 
                                x:Name="ValueTxt"
                                Grid.Column="1"
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch"
                                CornerRadius="{TemplateBinding TextBoxCornerRadius}"
                                Background="{TemplateBinding TextBoxBrush}"
                                BackgroundHover="{TemplateBinding TextBoxHoverBrush}"
                                Foreground="{TemplateBinding Foreground}"
                                BorderThickness="0"
                                Text="{TemplateBinding Value, Converter={StaticResource FloatToString}}"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"/>
                            <local:HoverButton 
                                x:Name="IncreaseBtn"
                                Grid.Column="2" 
                                Width="{Binding ElementName=grid, Path=ActualHeight}" 
                                Height="{Binding ElementName=grid, Path=ActualHeight}"
                                ShowIcon="False"
                                TextFont="Segoe MDL2 Assets"
                                Content="&#xE010;"
                                CornerRadius="{TemplateBinding RightButtonCornerRadius}"
                                Background="{TemplateBinding ButtonBrush}"
                                BackgroundHover="{TemplateBinding ButtonHoverBrush}"
                                Foreground="{TemplateBinding IconBrush}"
                                ForegroundHover="{TemplateBinding IconHoverBrush}"
                                BorderThickness="0"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:HoverToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HoverToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <local:HoverButton Background="{TemplateBinding EnabledBrushColor}" BackgroundHover="{TemplateBinding EnabledBrushColorHover}" x:Name="OnBtn" Grid.Column="0" ShowIcon="False" Content="{TemplateBinding LeftButtonText}" CornerRadius="5,0,0,5" BorderThickness="0" TextFont="{TemplateBinding FontFamily}"/>
                        <local:HoverButton Background="{TemplateBinding DisabledBrushColor}" BackgroundHover="{TemplateBinding DisabledBrushColorHover}" x:Name="OffBtn" Grid.Column="1" ShowIcon="False" Content="{TemplateBinding RightButtonText}" CornerRadius="0,5,5,0" BorderThickness="0" TextFont="{TemplateBinding FontFamily}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Value" Value="True">
                            <Setter TargetName="OnBtn" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EnabledBrushColor}"/>
                            <Setter TargetName="OnBtn" Property="BackgroundHover" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EnabledBrushColorHover}"/>
                            <Setter TargetName="OffBtn" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisabledBrushColor}"/>
                            <Setter TargetName="OffBtn" Property="BackgroundHover" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisabledBrushColorHover}"/>
                        </Trigger>
                        <Trigger Property="Value" Value="False">
                            <Setter TargetName="OnBtn" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisabledBrushColor}"/>
                            <Setter TargetName="OnBtn" Property="BackgroundHover" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisabledBrushColorHover}"/>
                            <Setter TargetName="OffBtn" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EnabledBrushColor}"/>
                            <Setter TargetName="OffBtn" Property="BackgroundHover" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EnabledBrushColorHover}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
    </ControlTemplate>

    <Style TargetType="{x:Type local:HoverComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HoverComboBox}}}"/>
                    <Setter Property="FontFamily" Value="{Binding FontFamily, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HoverComboBox}}}"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                                    <ContentPresenter/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{Binding ItemBackgroundHover, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HoverComboBox}}}"/>
                                        <Setter Property="Foreground" Value="{Binding ItemForegroundHover, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HoverComboBox}}}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="#888888"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HoverComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Grid.Column" Value="2"/>
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="IsChecked" Value="{Binding IsDropDownOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HoverComboBox}}}"/>
                                    <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:HoverComboBox}}}" />
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="30" />
                                                    </Grid.ColumnDefinitions>
                                                    <Border
                                                        x:Name="Border" 
                                                        Grid.ColumnSpan="2"
                                                        CornerRadius="5"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="#FF97A0A5"
                                                        />
                                                    <Label
                                                        x:Name="Arrow"
                                                        FontFamily="Segoe MDL2 Assets"
                                                        Content="&#xE011;"
                                                        Foreground="White"
                                                        Grid.Column="1"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter
                            Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"                            
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            TextBlock.FontFamily="{TemplateBinding FontFamily}"/>
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"                                 
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5"
                                BorderThickness="1"
                                BorderBrush="{TemplateBinding BorderBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type local:HoverExpander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HoverExpander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Border x:Name="HeaderBorder" Grid.Row="0" Background="{TemplateBinding Background}" CornerRadius="5">
                            <Grid x:Name="HeaderGrid" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding ButtonsRightMargin, Converter={StaticResource DoubleToLeftMargin}}" Content="Categoria" VerticalAlignment="Stretch" VerticalContentAlignment="Center"/>
                                <Grid Grid.Column="1" Margin="{TemplateBinding ButtonsRightMargin, Converter={StaticResource DoubleToRightMargin}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="clm1" Width="Auto"/>
                                        <ColumnDefinition x:Name="clm2" Width="Auto"/>
                                        <ColumnDefinition x:Name="clm3" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <local:HoverButton Grid.Column="0" x:Name="Btn1" Background="{TemplateBinding ButtonsBackground}" BackgroundHover="{TemplateBinding ButtonsBackgroundHover}" BorderThickness="0" ShowIcon="False" TextFont="Segoe MDL2 Assets" Content="{TemplateBinding Btn1Icon}" TextFontSize="{TemplateBinding ButtonsIconSize}" HorizontalAlignment="Right" VerticalAlignment="Center" Width="{TemplateBinding ButtonsSize}" Height="{TemplateBinding ButtonsSize}"/>
                                    <local:HoverButton Grid.Column="1" x:Name="Btn2" Background="{TemplateBinding ButtonsBackground}" BackgroundHover="{TemplateBinding ButtonsBackgroundHover}" BorderThickness="0" ShowIcon="False" TextFont="Segoe MDL2 Assets" Content="{TemplateBinding Btn2Icon}" TextFontSize="{TemplateBinding ButtonsIconSize}" HorizontalAlignment="Right" VerticalAlignment="Center" Width="{TemplateBinding ButtonsSize}" Height="{TemplateBinding ButtonsSize}"/>
                                    <local:HoverButton Grid.Column="2" x:Name="Btn3" Background="{TemplateBinding ButtonsBackground}" BackgroundHover="{TemplateBinding ButtonsBackgroundHover}" BorderThickness="0" ShowIcon="False" TextFont="Segoe MDL2 Assets" Content="{TemplateBinding Btn3Icon}" TextFontSize="{TemplateBinding ButtonsIconSize}" HorizontalAlignment="Right" VerticalAlignment="Center" Width="{TemplateBinding ButtonsSize}" Height="{TemplateBinding ButtonsSize}"/>
                                    <local:HoverButton Grid.Column="3" x:Name="ExpanderBtn" Background="{TemplateBinding ButtonsBackground}" BackgroundHover="{TemplateBinding ButtonsBackgroundHover}" BorderThickness="0" ShowIcon="False" TextFont="Segoe MDL2 Assets" Content="{TemplateBinding DownIcon}" TextFontSize="{TemplateBinding ButtonsIconSize}" HorizontalAlignment="Right" VerticalAlignment="Center" Width="{TemplateBinding ButtonsSize}" Height="{TemplateBinding ButtonsSize}"/>
                                </Grid>
                            </Grid>
                        </Border>

                        <Border x:Name="ContentBorder" Grid.Row="1" Background="#C4C4C4" CornerRadius="5" Visibility="Hidden">
                            <Grid x:Name="ContentGrid" Height="0">
                                <ContentPresenter Height="Auto"/>
                            </Grid>
                        </Border>
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentGrid" Property="Height" Value="Auto"/>
                            <Setter TargetName="HeaderBorder" Property="CornerRadius" Value="5,5,0,0"/>
                            <Setter TargetName="ContentBorder" Property="CornerRadius" Value="0,0,5,5"/>
                            <Setter TargetName="ContentBorder" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ExpanderBtn" Property="Content" Value="{Binding Path=UpIcon, RelativeSource={RelativeSource AncestorType={x:Type local:HoverExpander}}}"/>
                        </Trigger>
                        <Trigger Property="ButtonsToDisplay" Value="None">
                            <Setter TargetName="Btn1" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Btn2" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Btn3" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="ExpanderBtn" Property="CornerRadius" Value="5"/>
                        </Trigger>
                        <Trigger Property="ButtonsToDisplay" Value="One">
                            <Setter TargetName="Btn1" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Btn2" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="clm2" Property="Width" Value="0"/>
                            <Setter TargetName="Btn3" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="clm3" Property="Width" Value="0"/>
                            <Setter TargetName="Btn1" Property="CornerRadius" Value="5,0,0,5"/>
                            <Setter TargetName="ExpanderBtn" Property="CornerRadius" Value="0,5,5,0"/>
                        </Trigger>
                        <Trigger Property="ButtonsToDisplay" Value="Two">
                            <Setter TargetName="Btn1" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Btn2" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Btn3" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="clm3" Property="Width" Value="0"/>
                            <Setter TargetName="Btn1" Property="CornerRadius" Value="5,0,0,5"/>
                            <Setter TargetName="Btn2" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="ExpanderBtn" Property="CornerRadius" Value="0,5,5,0"/>
                        </Trigger>
                        <Trigger Property="ButtonsToDisplay" Value="Three">
                            <Setter TargetName="Btn1" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Btn2" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Btn3" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Btn1" Property="CornerRadius" Value="5,0,0,5"/>
                            <Setter TargetName="Btn2" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="Btn3" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="ExpanderBtn" Property="CornerRadius" Value="0,5,5,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
